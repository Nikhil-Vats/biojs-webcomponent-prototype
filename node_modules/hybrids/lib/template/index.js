"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.html = html;
exports.svg = svg;

var _define = _interopRequireDefault(require("../define"));

var _core = require("./core");

var _resolve = _interopRequireDefault(require("./resolve"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defineElements(elements) {
  (0, _define.default)(elements);
  return this;
}

function key(id) {
  this.id = id;
  return this;
}

var updates = new Map();

function create(parts, args, isSVG) {
  var update = function update(host) {
    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : host;
    var id = (0, _core.createId)(parts, isSVG);
    var render = updates.get(id);

    if (!render) {
      render = (0, _core.compile)(parts, isSVG);
      updates.set(id, render);
    }

    render(host, target, args);
  };

  return Object.assign(update, {
    define: defineElements,
    key: key
  });
}

function html(parts) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return create(parts, args);
}

function svg(parts) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return create(parts, args, true);
}

Object.assign(html, {
  resolve: _resolve.default
});
Object.assign(svg, {
  resolve: _resolve.default
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZW1wbGF0ZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZpbmVFbGVtZW50cyIsImVsZW1lbnRzIiwia2V5IiwiaWQiLCJ1cGRhdGVzIiwiTWFwIiwiY3JlYXRlIiwicGFydHMiLCJhcmdzIiwiaXNTVkciLCJ1cGRhdGUiLCJob3N0IiwidGFyZ2V0IiwicmVuZGVyIiwiZ2V0Iiwic2V0IiwiT2JqZWN0IiwiYXNzaWduIiwiZGVmaW5lIiwiaHRtbCIsInN2ZyIsInJlc29sdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7Ozs7QUFFQSxTQUFTQSxjQUFULENBQXdCQyxRQUF4QixFQUFrQztBQUNoQyx1QkFBT0EsUUFBUDtBQUNBLFNBQU8sSUFBUDtBQUNEOztBQUVELFNBQVNDLEdBQVQsQ0FBYUMsRUFBYixFQUFpQjtBQUNmLE9BQUtBLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQU8sSUFBUDtBQUNEOztBQUVELElBQU1DLE9BQU8sR0FBRyxJQUFJQyxHQUFKLEVBQWhCOztBQUVBLFNBQVNDLE1BQVQsQ0FBZ0JDLEtBQWhCLEVBQXVCQyxJQUF2QixFQUE2QkMsS0FBN0IsRUFBb0M7QUFDbEMsTUFBTUMsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQ0MsSUFBRCxFQUF5QjtBQUFBLFFBQWxCQyxNQUFrQix1RUFBVEQsSUFBUztBQUN0QyxRQUFNUixFQUFFLEdBQUcsb0JBQVNJLEtBQVQsRUFBZ0JFLEtBQWhCLENBQVg7QUFDQSxRQUFJSSxNQUFNLEdBQUdULE9BQU8sQ0FBQ1UsR0FBUixDQUFZWCxFQUFaLENBQWI7O0FBRUEsUUFBSSxDQUFDVSxNQUFMLEVBQWE7QUFDWEEsTUFBQUEsTUFBTSxHQUFHLG1CQUFRTixLQUFSLEVBQWVFLEtBQWYsQ0FBVDtBQUNBTCxNQUFBQSxPQUFPLENBQUNXLEdBQVIsQ0FBWVosRUFBWixFQUFnQlUsTUFBaEI7QUFDRDs7QUFFREEsSUFBQUEsTUFBTSxDQUFDRixJQUFELEVBQU9DLE1BQVAsRUFBZUosSUFBZixDQUFOO0FBQ0QsR0FWRDs7QUFZQSxTQUFPUSxNQUFNLENBQUNDLE1BQVAsQ0FBY1AsTUFBZCxFQUFzQjtBQUFFUSxJQUFBQSxNQUFNLEVBQUVsQixjQUFWO0FBQTBCRSxJQUFBQSxHQUFHLEVBQUhBO0FBQTFCLEdBQXRCLENBQVA7QUFDRDs7QUFFTSxTQUFTaUIsSUFBVCxDQUFjWixLQUFkLEVBQThCO0FBQUEsb0NBQU5DLElBQU07QUFBTkEsSUFBQUEsSUFBTTtBQUFBOztBQUNuQyxTQUFPRixNQUFNLENBQUNDLEtBQUQsRUFBUUMsSUFBUixDQUFiO0FBQ0Q7O0FBRU0sU0FBU1ksR0FBVCxDQUFhYixLQUFiLEVBQTZCO0FBQUEscUNBQU5DLElBQU07QUFBTkEsSUFBQUEsSUFBTTtBQUFBOztBQUNsQyxTQUFPRixNQUFNLENBQUNDLEtBQUQsRUFBUUMsSUFBUixFQUFjLElBQWQsQ0FBYjtBQUNEOztBQUVEUSxNQUFNLENBQUNDLE1BQVAsQ0FBY0UsSUFBZCxFQUFvQjtBQUFFRSxFQUFBQSxPQUFPLEVBQVBBO0FBQUYsQ0FBcEI7QUFDQUwsTUFBTSxDQUFDQyxNQUFQLENBQWNHLEdBQWQsRUFBbUI7QUFBRUMsRUFBQUEsT0FBTyxFQUFQQTtBQUFGLENBQW5CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmluZSBmcm9tICcuLi9kZWZpbmUnO1xuXG5pbXBvcnQgeyBjb21waWxlLCBjcmVhdGVJZCB9IGZyb20gJy4vY29yZSc7XG5pbXBvcnQgcmVzb2x2ZSBmcm9tICcuL3Jlc29sdmUnO1xuXG5mdW5jdGlvbiBkZWZpbmVFbGVtZW50cyhlbGVtZW50cykge1xuICBkZWZpbmUoZWxlbWVudHMpO1xuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24ga2V5KGlkKSB7XG4gIHRoaXMuaWQgPSBpZDtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbmNvbnN0IHVwZGF0ZXMgPSBuZXcgTWFwKCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZShwYXJ0cywgYXJncywgaXNTVkcpIHtcbiAgY29uc3QgdXBkYXRlID0gKGhvc3QsIHRhcmdldCA9IGhvc3QpID0+IHtcbiAgICBjb25zdCBpZCA9IGNyZWF0ZUlkKHBhcnRzLCBpc1NWRyk7XG4gICAgbGV0IHJlbmRlciA9IHVwZGF0ZXMuZ2V0KGlkKTtcblxuICAgIGlmICghcmVuZGVyKSB7XG4gICAgICByZW5kZXIgPSBjb21waWxlKHBhcnRzLCBpc1NWRyk7XG4gICAgICB1cGRhdGVzLnNldChpZCwgcmVuZGVyKTtcbiAgICB9XG5cbiAgICByZW5kZXIoaG9zdCwgdGFyZ2V0LCBhcmdzKTtcbiAgfTtcblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbih1cGRhdGUsIHsgZGVmaW5lOiBkZWZpbmVFbGVtZW50cywga2V5IH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHRtbChwYXJ0cywgLi4uYXJncykge1xuICByZXR1cm4gY3JlYXRlKHBhcnRzLCBhcmdzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN2ZyhwYXJ0cywgLi4uYXJncykge1xuICByZXR1cm4gY3JlYXRlKHBhcnRzLCBhcmdzLCB0cnVlKTtcbn1cblxuT2JqZWN0LmFzc2lnbihodG1sLCB7IHJlc29sdmUgfSk7XG5PYmplY3QuYXNzaWduKHN2ZywgeyByZXNvbHZlIH0pO1xuIl19