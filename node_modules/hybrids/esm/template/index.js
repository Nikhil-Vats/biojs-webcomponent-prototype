import define from '../define';
import { compile, createId } from './core';
import resolve from './resolve';

function defineElements(elements) {
  define(elements);
  return this;
}

function key(id) {
  this.id = id;
  return this;
}

var updates = new Map();

function create(parts, args, isSVG) {
  var update = function update(host) {
    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : host;
    var id = createId(parts, isSVG);
    var render = updates.get(id);

    if (!render) {
      render = compile(parts, isSVG);
      updates.set(id, render);
    }

    render(host, target, args);
  };

  return Object.assign(update, {
    define: defineElements,
    key: key
  });
}

export function html(parts) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return create(parts, args);
}
export function svg(parts) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return create(parts, args, true);
}
Object.assign(html, {
  resolve: resolve
});
Object.assign(svg, {
  resolve: resolve
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZW1wbGF0ZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZpbmUiLCJjb21waWxlIiwiY3JlYXRlSWQiLCJyZXNvbHZlIiwiZGVmaW5lRWxlbWVudHMiLCJlbGVtZW50cyIsImtleSIsImlkIiwidXBkYXRlcyIsIk1hcCIsImNyZWF0ZSIsInBhcnRzIiwiYXJncyIsImlzU1ZHIiwidXBkYXRlIiwiaG9zdCIsInRhcmdldCIsInJlbmRlciIsImdldCIsInNldCIsIk9iamVjdCIsImFzc2lnbiIsImh0bWwiLCJzdmciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE1BQVAsTUFBbUIsV0FBbkI7QUFFQSxTQUFTQyxPQUFULEVBQWtCQyxRQUFsQixRQUFrQyxRQUFsQztBQUNBLE9BQU9DLE9BQVAsTUFBb0IsV0FBcEI7O0FBRUEsU0FBU0MsY0FBVCxDQUF3QkMsUUFBeEIsRUFBa0M7QUFDaENMLEVBQUFBLE1BQU0sQ0FBQ0ssUUFBRCxDQUFOO0FBQ0EsU0FBTyxJQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsR0FBVCxDQUFhQyxFQUFiLEVBQWlCO0FBQ2YsT0FBS0EsRUFBTCxHQUFVQSxFQUFWO0FBQ0EsU0FBTyxJQUFQO0FBQ0Q7O0FBRUQsSUFBTUMsT0FBTyxHQUFHLElBQUlDLEdBQUosRUFBaEI7O0FBRUEsU0FBU0MsTUFBVCxDQUFnQkMsS0FBaEIsRUFBdUJDLElBQXZCLEVBQTZCQyxLQUE3QixFQUFvQztBQUNsQyxNQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFDQyxJQUFELEVBQXlCO0FBQUEsUUFBbEJDLE1BQWtCLHVFQUFURCxJQUFTO0FBQ3RDLFFBQU1SLEVBQUUsR0FBR0wsUUFBUSxDQUFDUyxLQUFELEVBQVFFLEtBQVIsQ0FBbkI7QUFDQSxRQUFJSSxNQUFNLEdBQUdULE9BQU8sQ0FBQ1UsR0FBUixDQUFZWCxFQUFaLENBQWI7O0FBRUEsUUFBSSxDQUFDVSxNQUFMLEVBQWE7QUFDWEEsTUFBQUEsTUFBTSxHQUFHaEIsT0FBTyxDQUFDVSxLQUFELEVBQVFFLEtBQVIsQ0FBaEI7QUFDQUwsTUFBQUEsT0FBTyxDQUFDVyxHQUFSLENBQVlaLEVBQVosRUFBZ0JVLE1BQWhCO0FBQ0Q7O0FBRURBLElBQUFBLE1BQU0sQ0FBQ0YsSUFBRCxFQUFPQyxNQUFQLEVBQWVKLElBQWYsQ0FBTjtBQUNELEdBVkQ7O0FBWUEsU0FBT1EsTUFBTSxDQUFDQyxNQUFQLENBQWNQLE1BQWQsRUFBc0I7QUFBRWQsSUFBQUEsTUFBTSxFQUFFSSxjQUFWO0FBQTBCRSxJQUFBQSxHQUFHLEVBQUhBO0FBQTFCLEdBQXRCLENBQVA7QUFDRDs7QUFFRCxPQUFPLFNBQVNnQixJQUFULENBQWNYLEtBQWQsRUFBOEI7QUFBQSxvQ0FBTkMsSUFBTTtBQUFOQSxJQUFBQSxJQUFNO0FBQUE7O0FBQ25DLFNBQU9GLE1BQU0sQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLENBQWI7QUFDRDtBQUVELE9BQU8sU0FBU1csR0FBVCxDQUFhWixLQUFiLEVBQTZCO0FBQUEscUNBQU5DLElBQU07QUFBTkEsSUFBQUEsSUFBTTtBQUFBOztBQUNsQyxTQUFPRixNQUFNLENBQUNDLEtBQUQsRUFBUUMsSUFBUixFQUFjLElBQWQsQ0FBYjtBQUNEO0FBRURRLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQyxJQUFkLEVBQW9CO0FBQUVuQixFQUFBQSxPQUFPLEVBQVBBO0FBQUYsQ0FBcEI7QUFDQWlCLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjRSxHQUFkLEVBQW1CO0FBQUVwQixFQUFBQSxPQUFPLEVBQVBBO0FBQUYsQ0FBbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmaW5lIGZyb20gJy4uL2RlZmluZSc7XG5cbmltcG9ydCB7IGNvbXBpbGUsIGNyZWF0ZUlkIH0gZnJvbSAnLi9jb3JlJztcbmltcG9ydCByZXNvbHZlIGZyb20gJy4vcmVzb2x2ZSc7XG5cbmZ1bmN0aW9uIGRlZmluZUVsZW1lbnRzKGVsZW1lbnRzKSB7XG4gIGRlZmluZShlbGVtZW50cyk7XG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiBrZXkoaWQpIHtcbiAgdGhpcy5pZCA9IGlkO1xuICByZXR1cm4gdGhpcztcbn1cblxuY29uc3QgdXBkYXRlcyA9IG5ldyBNYXAoKTtcblxuZnVuY3Rpb24gY3JlYXRlKHBhcnRzLCBhcmdzLCBpc1NWRykge1xuICBjb25zdCB1cGRhdGUgPSAoaG9zdCwgdGFyZ2V0ID0gaG9zdCkgPT4ge1xuICAgIGNvbnN0IGlkID0gY3JlYXRlSWQocGFydHMsIGlzU1ZHKTtcbiAgICBsZXQgcmVuZGVyID0gdXBkYXRlcy5nZXQoaWQpO1xuXG4gICAgaWYgKCFyZW5kZXIpIHtcbiAgICAgIHJlbmRlciA9IGNvbXBpbGUocGFydHMsIGlzU1ZHKTtcbiAgICAgIHVwZGF0ZXMuc2V0KGlkLCByZW5kZXIpO1xuICAgIH1cblxuICAgIHJlbmRlcihob3N0LCB0YXJnZXQsIGFyZ3MpO1xuICB9O1xuXG4gIHJldHVybiBPYmplY3QuYXNzaWduKHVwZGF0ZSwgeyBkZWZpbmU6IGRlZmluZUVsZW1lbnRzLCBrZXkgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBodG1sKHBhcnRzLCAuLi5hcmdzKSB7XG4gIHJldHVybiBjcmVhdGUocGFydHMsIGFyZ3MpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3ZnKHBhcnRzLCAuLi5hcmdzKSB7XG4gIHJldHVybiBjcmVhdGUocGFydHMsIGFyZ3MsIHRydWUpO1xufVxuXG5PYmplY3QuYXNzaWduKGh0bWwsIHsgcmVzb2x2ZSB9KTtcbk9iamVjdC5hc3NpZ24oc3ZnLCB7IHJlc29sdmUgfSk7XG4iXX0=